name: Python tests

on:
  workflow_run:
    workflows: [ 'Linting' ]
    types:
      - completed

jobs:

  build:

    runs-on: ubuntu-22.04
    environment: tests
    strategy:
      matrix:
        python-version: ['3.10']
        redis-version: [6]
        elasticsearch-version: [7.10.1]
      max-parallel: 1

    steps:
      - name: Get PR information
        uses: potiuk/get-workflow-origin@v1_5
        if: ${{ github.event.workflow_run.event == 'pull_request' }}
        id: source-run-info
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}

      - uses: actions/checkout@v3
        if: ${{ github.event.workflow_run.event == 'pull_request' }}
        with:
          ref: ${{ steps.source-run-info.outputs.sourceHeadBranch }}
          repository: ${{ steps.source-run-info.outputs.sourceHeadRepo }}

      - uses: actions/checkout@v3
        if: ${{ github.event.workflow_run.event != 'pull_request' }}
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            tests_requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r tests_requirements.txt
          ./setup.py install

      - name: Setup Redis ${{ matrix.redis-version }}
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w vm.max_map_count=262144
    
      - name: Setup Elasticsearch ${{ matrix.elasticsearch-version }}
        uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: ${{ matrix.elasticsearch-version }}
          host port: 9200
          container port: 9200
          discovery type: 'single-node'

      - name: Prepare environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y pcregrep
          export VAR=/var/yang
          export TMP_DIR=$VAR/tmp
          export TEST_REPO=$TMP_DIR/test/YangModels/yang
          export BACKEND=$PWD
          export PYTHONPATH=$PYTHONPATH:$BACKEND
          export YANGCATALOG_CONFIG_PATH=$BACKEND/tests/resources/test.conf
          sudo mkdir -p $VAR
          sudo chown -R $(whoami):$(whoami) $VAR
          ./prepare_environment.sh
          sed -i "s/yc-redis/localhost/" $BACKEND/tests/resources/test.conf

      - name: Feed Redis
        run: |
          export BACKEND=$PWD
          export YANGCATALOG_CONFIG_PATH=$BACKEND/tests/resources/test.conf
          python feed_redis.py

      - name: Test with pytest
        env:
          TOKEN: ${{ secrets.TOKEN }}
          PYANG_PLUGINPATH: $PWD/elasticsearchIndexing/pyang_plugin
        run: |
          export TOKEN
          export TEST_REPO=/var/yang/tmp/test/YangModels/yang
          export BACKEND=$PWD
          export YANGCATALOG_CONFIG_PATH=$BACKEND/tests/resources/test.conf
          coverage run -am pytest
          coverage xml

      - name: Coverage report
        if: ${{ github.repository == 'YangCatalog/backend' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true